<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ssafit.pjt.model.dao.TicketDao">
	
	<!-- 이용권 생성 -->
	<insert id="insertTicket" parameterType="Ticket">
		INSERT INTO tickets (expiration_date, total_quantity, remaining_quantity, category, user_id, store_id, buy_ticket_id, ticket_name)
		VALUES(#{exexpirationDate}, #{totalQuantity}, #{remainingQuantity}, #{category}, #{userId}, #{storeId}, #{buyTicketId}, #{name})
	</insert>
	
	<!-- 이용권 삭제 -->
	<delete id="deleteTicket" parameterType="int">
		DELETE FROM tickets
		WHERE ticket_id = #{ticketId}
	</delete>
	
	<!-- 이용권 한개 읽기 -->
	<select id="selectTicketById" parameterType="int" resultType="Ticket">
		SELECT *
		FROM tickets
		WHERE ticket_id = #{ticketId}
	</select>
	
	<!-- 이용권 리스트 읽기 -->
	<select id="selectTicketList" parameterType="String" resultType="Ticket">
		SELECT *
		FROM tickets
		WHERE user_id = #{userId}
	</select>
	
	<!-- 이용권 사용 -->
	<update id="decreaseTicket" parameterType="int">
		UPDATE tickets
		SET `remaining_quantity` = 
   		CASE 
        	WHEN category = 0 THEN `remaining_quantity` - 1
        	ELSE `remaining_quantity`
    	END
		WHERE ticket_id = #{ticketId}
	</update>
	
	<!-- 이용권 복구(예약 취소 시) -->
	<update id="increaseTicket" parameterType="int">
		UPDATE tickets
		SET `remaining_quantity` = 
   		CASE 
        	WHEN category = 0 THEN `remaining_quantity` + 1
        	ELSE `remaining_quantity`
    	END
		WHERE ticket_id = (SELECT ticket_id
						   FROM reservation
						   WHERE reservation_id = ${reservationId})
									
	</update>
	
	<!-- 이용자가 해당 업체에서 사용할 수 있는 티켓 리스트 반환 -->
	<select id="selectTicketByStoreId" parameterType="map" resultType="Ticket">
	  SELECT *
	  FROM tickets
	  WHERE user_id = #{userId} AND store_id = #{storeId} AND expiration_date >= NOW()
	</select>

	
</mapper>